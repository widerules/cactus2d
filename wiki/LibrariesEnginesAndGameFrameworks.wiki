= Libraries, engines and games frameworks =
<p>It is important to differenciate the tools that helps in the game development process acceleration, as confusions involving these concepts are quite common.

<p>*Libraries* are composed of a set of classes and generic functions, created to assist the resolution of commom problems in game development.

<p>A *framework*, by its turn, can be described as a structure that suports game development, working as a frame or skeleton, so the programmer can be concerned with implementation of the game specific logic. To characterize a framework, it is not necessary the integration of diverse libraries or the implementation of a asset  pipeline.

<p>*Game engines* (or simply engines) are development kits, distributed as APIs or as a set of tools or libraries used to simplify and abstract the development process, taking advantage of some features common to all games. Generally, the engines are responsible for implementing the data processing operations abstracted high level and to generate low-level data that can be understood by the hardware, such as, calculation of rotation and adjustment of the frame rate per second  to an optimum value in accordance with the device on which the game is running.

<p>Among the functionality typically provided by an engine can be mentioned: screen refresh, graphics rendering, physics simulation, animation, sound and artificial intelligence. Thus, the engines offers a significant increase in flexibility in process development as a whole, as package a number of features that can be used to create different games.